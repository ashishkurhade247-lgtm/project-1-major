{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "581f746e-a32c-4e26-8bd1-00f3bbabe7ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id;age;gender;height;weight;ap_hi;ap_lo;cholesterol;gluc;smoke;alco;active;cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0;18393;2;168;62.0;110;80;1;1;0;0;1;0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1;20228;1;156;85.0;140;90;3;1;0;0;1;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2;18857;1;165;64.0;130;70;3;1;0;0;0;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3;17623;2;169;82.0;150;100;1;1;0;0;1;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4;17474;1;156;56.0;100;60;1;1;0;0;0;0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>99993;19240;2;168;76.0;120;80;1;1;1;0;1;0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>99995;22601;1;158;126.0;140;90;2;2;0;0;1;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>99996;19066;2;183;105.0;180;90;3;1;0;1;0;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>99998;22431;1;163;72.0;135;80;1;2;0;0;0;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>99999;20540;1;170;72.0;120;80;2;1;0;0;1;0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      id;age;gender;height;weight;ap_hi;ap_lo;cholesterol;gluc;smoke;alco;active;cardio\n",
       "0                  0;18393;2;168;62.0;110;80;1;1;0;0;1;0                               \n",
       "1                  1;20228;1;156;85.0;140;90;3;1;0;0;1;1                               \n",
       "2                  2;18857;1;165;64.0;130;70;3;1;0;0;0;1                               \n",
       "3                 3;17623;2;169;82.0;150;100;1;1;0;0;1;1                               \n",
       "4                  4;17474;1;156;56.0;100;60;1;1;0;0;0;0                               \n",
       "...                                                  ...                               \n",
       "69995          99993;19240;2;168;76.0;120;80;1;1;1;0;1;0                               \n",
       "69996         99995;22601;1;158;126.0;140;90;2;2;0;0;1;1                               \n",
       "69997         99996;19066;2;183;105.0;180;90;3;1;0;1;0;1                               \n",
       "69998          99998;22431;1;163;72.0;135;80;1;2;0;0;0;1                               \n",
       "69999          99999;20540;1;170;72.0;120;80;2;1;0;0;1;0                               \n",
       "\n",
       "[70000 rows x 1 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "df = pd.read_csv(r\"C:\\Users\\HP\\Downloads\\cardio_train (1).csv\")\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "b1310ee3-449c-495e-9780-e264dcf9cf3c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id;age;gender;height;weight;ap_hi;ap_lo;cholesterol;gluc;smoke;alco;active;cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0;18393;2;168;62.0;110;80;1;1;0;0;1;0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1;20228;1;156;85.0;140;90;3;1;0;0;1;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2;18857;1;165;64.0;130;70;3;1;0;0;0;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3;17623;2;169;82.0;150;100;1;1;0;0;1;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4;17474;1;156;56.0;100;60;1;1;0;0;0;0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>99993;19240;2;168;76.0;120;80;1;1;1;0;1;0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>99995;22601;1;158;126.0;140;90;2;2;0;0;1;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>99996;19066;2;183;105.0;180;90;3;1;0;1;0;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>99998;22431;1;163;72.0;135;80;1;2;0;0;0;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>99999;20540;1;170;72.0;120;80;2;1;0;0;1;0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      id;age;gender;height;weight;ap_hi;ap_lo;cholesterol;gluc;smoke;alco;active;cardio\n",
       "0                  0;18393;2;168;62.0;110;80;1;1;0;0;1;0                               \n",
       "1                  1;20228;1;156;85.0;140;90;3;1;0;0;1;1                               \n",
       "2                  2;18857;1;165;64.0;130;70;3;1;0;0;0;1                               \n",
       "3                 3;17623;2;169;82.0;150;100;1;1;0;0;1;1                               \n",
       "4                  4;17474;1;156;56.0;100;60;1;1;0;0;0;0                               \n",
       "...                                                  ...                               \n",
       "69995          99993;19240;2;168;76.0;120;80;1;1;1;0;1;0                               \n",
       "69996         99995;22601;1;158;126.0;140;90;2;2;0;0;1;1                               \n",
       "69997         99996;19066;2;183;105.0;180;90;3;1;0;1;0;1                               \n",
       "69998          99998;22431;1;163;72.0;135;80;1;2;0;0;0;1                               \n",
       "69999          99999;20540;1;170;72.0;120;80;2;1;0;0;1;0                               \n",
       "\n",
       "[70000 rows x 1 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "path=r\"C:\\Users\\HP\\Downloads\\cardio_train (1).csv\"\n",
    "df2 = pd.read_csv(path)\n",
    "df2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7f99e23d-99b1-4641-978a-9e7ac04f86e1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id;age;gender;height;weight;ap_hi;ap_lo;cholesterol;gluc;smoke;alco;active;cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0;18393;2;168;62.0;110;80;1;1;0;0;1;0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1;20228;1;156;85.0;140;90;3;1;0;0;1;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2;18857;1;165;64.0;130;70;3;1;0;0;0;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3;17623;2;169;82.0;150;100;1;1;0;0;1;1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4;17474;1;156;56.0;100;60;1;1;0;0;0;0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  id;age;gender;height;weight;ap_hi;ap_lo;cholesterol;gluc;smoke;alco;active;cardio\n",
       "0              0;18393;2;168;62.0;110;80;1;1;0;0;1;0                               \n",
       "1              1;20228;1;156;85.0;140;90;3;1;0;0;1;1                               \n",
       "2              2;18857;1;165;64.0;130;70;3;1;0;0;0;1                               \n",
       "3             3;17623;2;169;82.0;150;100;1;1;0;0;1;1                               \n",
       "4              4;17474;1;156;56.0;100;60;1;1;0;0;0;0                               "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0c967a0c-b25a-4c6e-b3f1-ee297d2e32fa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   id    age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n",
      "0   0  18393       2     168    62.0    110     80            1     1      0   \n",
      "1   1  20228       1     156    85.0    140     90            3     1      0   \n",
      "2   2  18857       1     165    64.0    130     70            3     1      0   \n",
      "3   3  17623       2     169    82.0    150    100            1     1      0   \n",
      "4   4  17474       1     156    56.0    100     60            1     1      0   \n",
      "\n",
      "   alco  active  cardio  \n",
      "0     0       1       0  \n",
      "1     0       1       1  \n",
      "2     0       0       1  \n",
      "3     0       1       1  \n",
      "4     0       0       0  \n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "\n",
    "# Tell pandas that the separator is a semicolon\n",
    "df2 = pd.read_csv(r\"C:\\Users\\HP\\Downloads\\cardio_train (1).csv\", sep=';')\n",
    "\n",
    "print(df2.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "f0f6441a-97e5-4c45-a110-07d3395f8d6a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "          id    age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  \\\n",
      "0          0  18393       2     168    62.0    110     80            1     1   \n",
      "1          1  20228       1     156    85.0    140     90            3     1   \n",
      "2          2  18857       1     165    64.0    130     70            3     1   \n",
      "3          3  17623       2     169    82.0    150    100            1     1   \n",
      "4          4  17474       1     156    56.0    100     60            1     1   \n",
      "...      ...    ...     ...     ...     ...    ...    ...          ...   ...   \n",
      "69995  99993  19240       2     168    76.0    120     80            1     1   \n",
      "69996  99995  22601       1     158   126.0    140     90            2     2   \n",
      "69997  99996  19066       2     183   105.0    180     90            3     1   \n",
      "69998  99998  22431       1     163    72.0    135     80            1     2   \n",
      "69999  99999  20540       1     170    72.0    120     80            2     1   \n",
      "\n",
      "       smoke  alco  active  cardio  \n",
      "0          0     0       1       0  \n",
      "1          0     0       1       1  \n",
      "2          0     0       0       1  \n",
      "3          0     0       1       1  \n",
      "4          0     0       0       0  \n",
      "...      ...   ...     ...     ...  \n",
      "69995      1     0       1       0  \n",
      "69996      0     0       1       1  \n",
      "69997      0     1       0       1  \n",
      "69998      0     0       0       1  \n",
      "69999      0     0       1       0  \n",
      "\n",
      "[70000 rows x 13 columns] <class 'pandas.core.frame.DataFrame'>\n"
     ]
    }
   ],
   "source": [
    "df3=pd.DataFrame(df2)\n",
    "print(df3,type(df3))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "810cceac-8a22-4fa4-b42c-c6bfa287ca08",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>18393</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>18857</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>130</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>17623</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>82.0</td>\n",
       "      <td>150</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>17474</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>56.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>99993</td>\n",
       "      <td>19240</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>76.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>99995</td>\n",
       "      <td>22601</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>126.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>99996</td>\n",
       "      <td>19066</td>\n",
       "      <td>2</td>\n",
       "      <td>183</td>\n",
       "      <td>105.0</td>\n",
       "      <td>180</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>99998</td>\n",
       "      <td>22431</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>72.0</td>\n",
       "      <td>135</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>99999</td>\n",
       "      <td>20540</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>72.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id    age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  \\\n",
       "0          0  18393       2     168    62.0    110     80            1     1   \n",
       "1          1  20228       1     156    85.0    140     90            3     1   \n",
       "2          2  18857       1     165    64.0    130     70            3     1   \n",
       "3          3  17623       2     169    82.0    150    100            1     1   \n",
       "4          4  17474       1     156    56.0    100     60            1     1   \n",
       "...      ...    ...     ...     ...     ...    ...    ...          ...   ...   \n",
       "69995  99993  19240       2     168    76.0    120     80            1     1   \n",
       "69996  99995  22601       1     158   126.0    140     90            2     2   \n",
       "69997  99996  19066       2     183   105.0    180     90            3     1   \n",
       "69998  99998  22431       1     163    72.0    135     80            1     2   \n",
       "69999  99999  20540       1     170    72.0    120     80            2     1   \n",
       "\n",
       "       smoke  alco  active  cardio  \n",
       "0          0     0       1       0  \n",
       "1          0     0       1       1  \n",
       "2          0     0       0       1  \n",
       "3          0     0       1       1  \n",
       "4          0     0       0       0  \n",
       "...      ...   ...     ...     ...  \n",
       "69995      1     0       1       0  \n",
       "69996      0     0       1       1  \n",
       "69997      0     1       0       1  \n",
       "69998      0     0       0       1  \n",
       "69999      0     0       1       0  \n",
       "\n",
       "[70000 rows x 13 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "78e8da13-8414-45d1-a17e-dfe1c383c54e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['id', 'age', 'gender', 'height', 'weight', 'ap_hi', 'ap_lo',\n",
       "       'cholesterol', 'gluc', 'smoke', 'alco', 'active', 'cardio'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.columns            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2ac7e6a1-9aa0-4fa4-8b48-3fcfb0fe704c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method NDFrame.describe of           id    age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  \\\n",
       "0          0  18393       2     168    62.0    110     80            1     1   \n",
       "1          1  20228       1     156    85.0    140     90            3     1   \n",
       "2          2  18857       1     165    64.0    130     70            3     1   \n",
       "3          3  17623       2     169    82.0    150    100            1     1   \n",
       "4          4  17474       1     156    56.0    100     60            1     1   \n",
       "...      ...    ...     ...     ...     ...    ...    ...          ...   ...   \n",
       "69995  99993  19240       2     168    76.0    120     80            1     1   \n",
       "69996  99995  22601       1     158   126.0    140     90            2     2   \n",
       "69997  99996  19066       2     183   105.0    180     90            3     1   \n",
       "69998  99998  22431       1     163    72.0    135     80            1     2   \n",
       "69999  99999  20540       1     170    72.0    120     80            2     1   \n",
       "\n",
       "       smoke  alco  active  cardio  \n",
       "0          0     0       1       0  \n",
       "1          0     0       1       1  \n",
       "2          0     0       0       1  \n",
       "3          0     0       1       1  \n",
       "4          0     0       0       0  \n",
       "...      ...   ...     ...     ...  \n",
       "69995      1     0       1       0  \n",
       "69996      0     0       1       1  \n",
       "69997      0     1       0       1  \n",
       "69998      0     0       0       1  \n",
       "69999      0     0       1       0  \n",
       "\n",
       "[70000 rows x 13 columns]>"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.describe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "286b5bd2-e4c9-4b01-80e0-ab35b1e2815f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id             0\n",
       "age            0\n",
       "gender         0\n",
       "height         0\n",
       "weight         0\n",
       "ap_hi          0\n",
       "ap_lo          0\n",
       "cholesterol    0\n",
       "gluc           0\n",
       "smoke          0\n",
       "alco           0\n",
       "active         0\n",
       "cardio         0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8e4ea2e5-4738-4479-98ef-64c13f300d16",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 70000 entries, 0 to 69999\n",
      "Data columns (total 13 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   id           70000 non-null  int64  \n",
      " 1   age          70000 non-null  int64  \n",
      " 2   gender       70000 non-null  int64  \n",
      " 3   height       70000 non-null  int64  \n",
      " 4   weight       70000 non-null  float64\n",
      " 5   ap_hi        70000 non-null  int64  \n",
      " 6   ap_lo        70000 non-null  int64  \n",
      " 7   cholesterol  70000 non-null  int64  \n",
      " 8   gluc         70000 non-null  int64  \n",
      " 9   smoke        70000 non-null  int64  \n",
      " 10  alco         70000 non-null  int64  \n",
      " 11  active       70000 non-null  int64  \n",
      " 12  cardio       70000 non-null  int64  \n",
      "dtypes: float64(1), int64(12)\n",
      "memory usage: 6.9 MB\n"
     ]
    }
   ],
   "source": [
    "df3.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "09c37e4b-76aa-4ad0-bc46-8db0bf977e39",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id             70000\n",
       "age             8076\n",
       "gender             2\n",
       "height           109\n",
       "weight           287\n",
       "ap_hi            153\n",
       "ap_lo            157\n",
       "cholesterol        3\n",
       "gluc               3\n",
       "smoke              2\n",
       "alco               2\n",
       "active             2\n",
       "cardio             2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "59bc5c33-2090-45e1-9ab1-db8f1246fe0a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0e2dcb6c-c45b-4ec9-9f74-5005a526bf16",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='ap_hi', ylabel='cardio'>"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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33ECaKmaSVIHoPWqU7L04IMP6v7779cZZ5xhhw0ePFhdu3bV7NmzSZYAAECLUafbcHv27FG/fv1ihvfr10979uw57KAAAACaijqVLA0ePFh33nmnli9fHjH8zjvv1ODBg+slMABoKGV5E6Vgkv7f4sk6YcFayXnFkjH+BoYWxwQTVZY/RZL03PXnKBwO+xwR6qJOydItt9yiU089VRs3blRhYaECgYBefvllbd++XevXr6/vGAGgfn1TT6pNmzYyid++Dilw8ICPQaFFCgRkQkmSRL28ZqxOt+FGjRqlf/3rXzrrrLP0+eefa8+ePZowYYL++c9/auTIkfUdIwAAgG/q3Chlly5dqMgNAABavFonS2+88YYGDhyohIQEvfHGG57j5ufnH3ZgAAAATUGtk6UhQ4Zox44d6tixo4YMGaJAICATpzJkIBBQZWVlvQYJAADgl1onSx988IE6dOhg+4GWxBij8vJy+zkcDivgPCEFAGjVap0s5ebmxu0HWoLy8nIVFRXZz8XFxTy5AgCQdAjJ0h//+Mdaz9TdsjcAAEBzVutk6cwzz4z4HF1nyX3LgjpLAACgpah1O0tVVVW2e+aZZzRkyBA99dRT+vzzz1VWVqb169fr6KOP1tNPP92Q8QIAADSqOrWzNGfOHN199906/vjj7bBx48YpLS1NP/3pT7V169Z6CxAAAMBPdWrB+/3331dmZmbM8MzMTH344YeHGxMAAECTUadkadiwYZozZ45KS0vtsB07dujyyy/XMcccU2/BAQAA+K1OydKqVau0c+dO5ebmqk+fPurTp4969Oih0tJSrVq1qr5jBAAA8E2d6iz17dtXf//737Vx40b94x//kDFGAwYM0Mknn0xDfgAAoEU55GTp4MGDSklJ0ZYtWzR27FiNHTu2IeICAABoEg75NlwoFFJubi5tKQEAgFahTnWWfvnLX2revHnas2dPfccDAADQpNSpztLy5cv13nvvqUuXLsrNzVU4HI74/+uvv14vwQEAAPitTslS9KtPAAAAWqo6JUvXXXddfccBoAbGGJWXl9vP4XCYp04BoBHVKVlC89daf4D37dtn+5vLOpeXl6uoqMh+Li4uVnp6ep3n594Gcr0MGwAQX52SpcrKSt1xxx165JFHtG3bNh04cCDi/1T8bvrq+we4uZg2bZrtby3rHM29DZQ30b9AAKCZ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o/elk8B817o5vyXu7SnJ3HfffWbMmDEmIyPDJohJSUnmJz/5iRkzZox57733jFSdvDvH/VFHHWXGjBljjDEmISHBDBo0yBhjTFJSkvntb38b018bzb7O0po1a5Senq709HSlpKQoLS3N9jv3bIcPH67bbrvN9h911FGSqt9NN2zYML3//vuSpL/+9a966623JEkHDx7UJ598ogEDBujEE0+092qNMXHv23799dfKzs6291Al6bPPPouZxj3twYMHdc4559g6Gunp6bbe0+eff26HO/foe/bsqQMHDuiiiy5SVVVVxP3wGTNmqKioSMXFxaqsrIyoU+XUx5g7d66OOeYYHThwQJK0e/duVVRUSJI++eQTe9/566+/1v79+/XRRx/Z+TvzO3jwoHbt2mWHf/HFF5K+rWcifXt//IgjjrDDarpXH8+//vUvSdKdd95phw0dOlTSt3UBohlj1L9//4i6G87LkqVv63i4672492k8Tl0l9zKPO+44SYp46/XBgwdt/5VXXilJ+stf/mLn67zf8L333ouJ57bbblNVVZUdPmPGDEnSp59+qlAoZI/hr776Sl999ZUkacuWLRFxOvXpioqKtH37dru/c3NzbeynnHJKRJ2BcePGSaq+1//kk0/a8a644gqdeuqpdh07deokqbqui7Pu7jow7nouUnVdnEmTJtlt4JgwYYJdT2OMtmzZYutHPPHEExH1LZxjasGCBXaalJQUGWMitpU7Dvf3av369ZKqj+nOnTtr3bp1kqrrC+7fv19SdT2psWPHSpIqKip0yy232OmPO+44Pf3005Kq69X97W9/s+s6evRoSdV1YtxOOOGEiOPAie3NN9+0w5zXOLm569h17Ngx5v8lJSW2310vxKnfN2LECDusd+/ekqR3331XL774oiTp7bfftsfhT3/6UxljtG/fPjuNU89q48aNEfWU1qxZI0m6+eabFQgENHXqVEnV5wZn3dyvonKvcygU0rvvvmvPGW3btrWxjxw5MmI9nHNxQkKCzjzzTPu/pKQkG9vPfvYzO/4999wT831113v88MMPJVVvd3ednb1790Ys131uc5bnxBJdL3LPnj2SpOzsbHvuXLp0qb744gt7PnH2/RFHHKHc3NyI+qqlpaWSFPMb4Iyzc+dOvfLKK4rmHKs1+eKLL/Tpp59Kqt7mzv5w5utsP0n2e7Ny5cqI7efEJimijqT796WqqspOH++3z5nmjDPOsMPc51n3ec/x9ddf22U6y9m7d689D7i/5zNnzqyx7lZFRYWtM5idna2SkhIFAgF17do17m92Tf21crilN37bu3eveffdd827775rSkpKzJtvvmn7n376aSPJFBcXm9dee832O3VEiouLzY9+9KMar3Qkmf3795tVq1bV6jbciSeeGHF//cEHH7RXI/Fuwx1zzDEmPz/f7Nq1KyYjd8eRnZ1tAoGAycjIMLm5uaawsNAEg8GIEp7XX3897tWuu+vZs6c544wzbEnKcccdZ6ZPn24mTJhgTjzxRHPSSSfZK52ePXuapUuXmgkTJpj27dvb8VJTU20dk5ycHHv14r56mD9/vpFknn32WTvMXSfE6Wq6Dedcobhv433Xlc0RRxxhpk+fbm9TStV1PJx+d4mR0zn1R9y34V588UXb765jE9259487NvdynBJDZz+7Y3OuVnNzcyP2v7NvMjIyzKBBg2xJk1fn3Bro06ePyc/Pj7ht8NZbbxmpuvTGOWYl2WLoNm3amJtuusneij777LPN3r17jVRdarp///6YY9PdxSuxq8sTo/XZuZffqVMnu97nnXeePcbd2+Doo4+O2DbXXHONLRWbMmVKxP9qWrdJkybZEpdAIBBRuutMc+SRR8bUx3BfjTu3D93bNTU11bN00H0cTpw40UjVJWrumJ3uxhtvNJIijg93adKWLVtipnGOi3j/q6lz4nCXqNx1111Gqr7F7i7pcvqPOOIIEwgEbEm9FP87n5aWZj799FP7efz48RHr6pRgn3jiiRHDzzvvPNOtWzeTl5dnjjrqqJhlderUyd46dZd4d+jQwZYOJiQk2HXq2LGjSUlJsfvPOZccddRR5qGHHqrVdnJKwbt3724GDhxobz8nJCSYtLQ08/7770eMF9317dvXHs/p6en2OHFK5uNVfYgumXcfc3XtUlNTTSAQMLNmzYr7f/cdAq+upiel9+zZE/c23Jw5c0xSUpKtY5aRkWF/f88777x6vw3X7EuW2rRpoz59+qhPnz4aMmSIBg4caPudK4UePXrYEp8ePXrY2vY9evTQ0qVL7VWkJC1evFiS7BX1G2+8ocLCQntVX1FRof379+uBBx6QJHvVIUlz5sxRWVmZ/fyPf/xDkvTll1/akhHn6k+qzuo3btxoY1u2bJktNRg3bpwtvRgwYIBCoZAKCwu1fft2bd26VePHj9eOHTvUtm1bderUSRs2bFD79u2Vk5OjQCCgxMREe9U/ZswYhcNhffHFF3r++ed15JFHKhgMasuWLRo8eLCeffZZTZw40V5Bt2vXTqWlpcrIyNCzzz6rL7/80o6Xnp5ur0zT09Pt1czIkSPtFUJBQYE6deoUcbXkLnlynigaMmRIxNW0c0VXVVWljIwMPfXUU5KqSxWc9wc629EZ7lxVfvzxxxo+fLgtGZRqfnLDMXjwYDutw30V65TQXHvttXaYc/V0xRVX2GHuqyDnikmSVq1aJal6Pz/11FP2qjcQCNjjZtGiRSovL7fTOFdpGRkZevrpp2081113nd2+N9xwgx0/ISFB3//+9yVVX5lt3LjRlsw5/4+OS5LuuOMOu467du3SBx98IKn6atYpcRkxYoQtJTzllFP06quvSoosTcrKylJaWpq9kjzllFMiSr7atWsnqfq78dhjj9nhTsmWJFtq4XBKAC6++GI7zdFHH62rrroqYjwnjrS0NBvnueeeG7H8VatWaffu3ZKqSzicOBMSEnTjjTdKqn6Czn2FvW7dOnvsdOjQwU4/bdo0bdiwQdK3JYyOnTt32m2ck5Oj7du32/8NGjTIDh82bJgdnpKSYvd9enq6LSWQvj32vve979lpBg0aZL87zlOXzpOHgUBAf//73yVVl4C4OU9ubty4UQUFBRElDk7p9xFHHBHxXXSeeOvWrZsKCgrsd6Vbt242NvdTqomJiXa57777riRpx44d9v/u77b7WHT6s7OzZYyJmMYpWXbO41J16dzOnTvt5wkTJtjlJSQk2G04cuRIvfTSS3a8jRs3atWqVXr77bf1f//3fwoGg9qxY4fdzzt27NDu3buVnZ1tvwuBQEDTpk3TO++8Y2N3zhXp6en66quvbEnIxo0bJVWfF84880xt2rTJlmy5S0CdODMyMmwp1Z49e/T2229rz549CofDqqqq0rHHHqs33nhD0relNNHns7Zt29pzdnl5uR3P2QbOPnNv/8WLF0eUsD300EO2//zzz6/xibV4nHj2798vY0xMSaPjr3/9a8yw6G0iKabkWKreVo888ojeeustVVRU6ODBg6qsrFQgENAjjzyiAwcO2CeCBw0apLKyMiUlJamoqEhvvfWW1q1bp1AopA8//FDr1q1TcnKy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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(x=\"ap_hi\",y=\"cardio\",data=df3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "3d1376e4-3173-4ba8-be8a-0c4ee1c9aaa8",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\AppData\\Local\\Temp\\ipykernel_21116\\2271068979.py:1: FutureWarning: \n",
      "\n",
      "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
      "\n",
      "  sns.countplot(x='gender', data=df3, palette='Set2')\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='gender', ylabel='count'>"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='gender', data=df3, palette='Set2')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "a45e3ff9-f3a2-40d0-8c3d-1ac1c28dcca6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='age', ylabel='Count'>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(df3['age'], bins=30, kde=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "a27c58eb-75b5-42cc-b983-2f5da8d1f497",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\AppData\\Local\\Temp\\ipykernel_21116\\2808308398.py:1: FutureWarning: \n",
      "\n",
      "Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n",
      "\n",
      "  sns.countplot(x='cardio', data=df3, palette='coolwarm')\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='cardio', ylabel='count'>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='cardio', data=df3, palette='coolwarm')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "c254e2c6-a314-4def-8c38-f65b9de70cd0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='height', ylabel='weight'>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(x='height', y='weight', hue='cardio', data=df3, alpha=0.5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "8e2ade5b-8c90-47b4-be29-deb8d04f2253",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='cardio', ylabel='age'>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x='cardio', y='age', data=df3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "e408673f-222a-4982-992f-bc97d7b0e1ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='ap_hi', ylabel='Count'>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.histplot(df3[\"ap_hi\"], bins=30, kde=True, color='skyblue')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "06de26ec-c3e6-4f32-bf7d-2256865421b7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                   id       age    gender    height    weight     ap_hi  \\\n",
      "id           1.000000  0.003457  0.003502 -0.003038 -0.001830  0.003356   \n",
      "age          0.003457  1.000000 -0.022811 -0.081515  0.053684  0.020764   \n",
      "gender       0.003502 -0.022811  1.000000  0.499033  0.155406  0.006005   \n",
      "height      -0.003038 -0.081515  0.499033  1.000000  0.290968  0.005488   \n",
      "weight      -0.001830  0.053684  0.155406  0.290968  1.000000  0.030702   \n",
      "ap_hi        0.003356  0.020764  0.006005  0.005488  0.030702  1.000000   \n",
      "ap_lo       -0.002529  0.017647  0.015254  0.006150  0.043710  0.016086   \n",
      "cholesterol  0.006106  0.154424 -0.035821 -0.050226  0.141768  0.023778   \n",
      "gluc         0.002467  0.098703 -0.020491 -0.018595  0.106857  0.011841   \n",
      "smoke       -0.003699 -0.047633  0.338135  0.187989  0.067780 -0.000922   \n",
      "alco         0.001210 -0.029723  0.170966  0.094419  0.067113  0.001408   \n",
      "active       0.003755 -0.009927  0.005866 -0.006570 -0.016867 -0.000033   \n",
      "cardio       0.003799  0.238159  0.008109 -0.010821  0.181660  0.054475   \n",
      "\n",
      "                ap_lo  cholesterol      gluc     smoke      alco    active  \\\n",
      "id          -0.002529     0.006106  0.002467 -0.003699  0.001210  0.003755   \n",
      "age          0.017647     0.154424  0.098703 -0.047633 -0.029723 -0.009927   \n",
      "gender       0.015254    -0.035821 -0.020491  0.338135  0.170966  0.005866   \n",
      "height       0.006150    -0.050226 -0.018595  0.187989  0.094419 -0.006570   \n",
      "weight       0.043710     0.141768  0.106857  0.067780  0.067113 -0.016867   \n",
      "ap_hi        0.016086     0.023778  0.011841 -0.000922  0.001408 -0.000033   \n",
      "ap_lo        1.000000     0.024019  0.010806  0.005186  0.010601  0.004780   \n",
      "cholesterol  0.024019     1.000000  0.451578  0.010354  0.035760  0.009911   \n",
      "gluc         0.010806     0.451578  1.000000 -0.004756  0.011246 -0.006770   \n",
      "smoke        0.005186     0.010354 -0.004756  1.000000  0.340094  0.025858   \n",
      "alco         0.010601     0.035760  0.011246  0.340094  1.000000  0.025476   \n",
      "active       0.004780     0.009911 -0.006770  0.025858  0.025476  1.000000   \n",
      "cardio       0.065719     0.221147  0.089307 -0.015486 -0.007330 -0.035653   \n",
      "\n",
      "               cardio  \n",
      "id           0.003799  \n",
      "age          0.238159  \n",
      "gender       0.008109  \n",
      "height      -0.010821  \n",
      "weight       0.181660  \n",
      "ap_hi        0.054475  \n",
      "ap_lo        0.065719  \n",
      "cholesterol  0.221147  \n",
      "gluc         0.089307  \n",
      "smoke       -0.015486  \n",
      "alco        -0.007330  \n",
      "active      -0.035653  \n",
      "cardio       1.000000  \n"
     ]
    }
   ],
   "source": [
    "correlation_matrix=df3.corr()\n",
    "print(correlation_matrix)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "09d4a003-b345-43b0-b7f9-ba5dd5a181a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>18393</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>18857</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>130</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>17623</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>82.0</td>\n",
       "      <td>150</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>17474</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>56.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>99993</td>\n",
       "      <td>19240</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>76.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>99995</td>\n",
       "      <td>22601</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>126.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>99996</td>\n",
       "      <td>19066</td>\n",
       "      <td>2</td>\n",
       "      <td>183</td>\n",
       "      <td>105.0</td>\n",
       "      <td>180</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>99998</td>\n",
       "      <td>22431</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>72.0</td>\n",
       "      <td>135</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>99999</td>\n",
       "      <td>20540</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>72.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          id    age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  \\\n",
       "0          0  18393       2     168    62.0    110     80            1     1   \n",
       "1          1  20228       1     156    85.0    140     90            3     1   \n",
       "2          2  18857       1     165    64.0    130     70            3     1   \n",
       "3          3  17623       2     169    82.0    150    100            1     1   \n",
       "4          4  17474       1     156    56.0    100     60            1     1   \n",
       "...      ...    ...     ...     ...     ...    ...    ...          ...   ...   \n",
       "69995  99993  19240       2     168    76.0    120     80            1     1   \n",
       "69996  99995  22601       1     158   126.0    140     90            2     2   \n",
       "69997  99996  19066       2     183   105.0    180     90            3     1   \n",
       "69998  99998  22431       1     163    72.0    135     80            1     2   \n",
       "69999  99999  20540       1     170    72.0    120     80            2     1   \n",
       "\n",
       "       smoke  alco  active  cardio  \n",
       "0          0     0       1       0  \n",
       "1          0     0       1       1  \n",
       "2          0     0       0       1  \n",
       "3          0     0       1       1  \n",
       "4          0     0       0       0  \n",
       "...      ...   ...     ...     ...  \n",
       "69995      1     0       1       0  \n",
       "69996      0     0       1       1  \n",
       "69997      0     1       0       1  \n",
       "69998      0     0       0       1  \n",
       "69999      0     0       1       0  \n",
       "\n",
       "[70000 rows x 13 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#logistic Regression\n",
    "df2\n",
    "# age\tgender\theight\tweight\tap_hi\tap_lo\tcholesterol\tgluc\tsmoke\talco\tactive=input,  cardio=output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "c36854c0-2e5d-4c79-8e24-db954789bfeb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>height</th>\n",
       "      <th>weight</th>\n",
       "      <th>ap_hi</th>\n",
       "      <th>ap_lo</th>\n",
       "      <th>cholesterol</th>\n",
       "      <th>gluc</th>\n",
       "      <th>smoke</th>\n",
       "      <th>alco</th>\n",
       "      <th>active</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>18393</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>62.0</td>\n",
       "      <td>110</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>20228</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>85.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18857</td>\n",
       "      <td>1</td>\n",
       "      <td>165</td>\n",
       "      <td>64.0</td>\n",
       "      <td>130</td>\n",
       "      <td>70</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>17623</td>\n",
       "      <td>2</td>\n",
       "      <td>169</td>\n",
       "      <td>82.0</td>\n",
       "      <td>150</td>\n",
       "      <td>100</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>17474</td>\n",
       "      <td>1</td>\n",
       "      <td>156</td>\n",
       "      <td>56.0</td>\n",
       "      <td>100</td>\n",
       "      <td>60</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>19240</td>\n",
       "      <td>2</td>\n",
       "      <td>168</td>\n",
       "      <td>76.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>22601</td>\n",
       "      <td>1</td>\n",
       "      <td>158</td>\n",
       "      <td>126.0</td>\n",
       "      <td>140</td>\n",
       "      <td>90</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>19066</td>\n",
       "      <td>2</td>\n",
       "      <td>183</td>\n",
       "      <td>105.0</td>\n",
       "      <td>180</td>\n",
       "      <td>90</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>22431</td>\n",
       "      <td>1</td>\n",
       "      <td>163</td>\n",
       "      <td>72.0</td>\n",
       "      <td>135</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>20540</td>\n",
       "      <td>1</td>\n",
       "      <td>170</td>\n",
       "      <td>72.0</td>\n",
       "      <td>120</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n",
       "0      18393       2     168    62.0    110     80            1     1      0   \n",
       "1      20228       1     156    85.0    140     90            3     1      0   \n",
       "2      18857       1     165    64.0    130     70            3     1      0   \n",
       "3      17623       2     169    82.0    150    100            1     1      0   \n",
       "4      17474       1     156    56.0    100     60            1     1      0   \n",
       "...      ...     ...     ...     ...    ...    ...          ...   ...    ...   \n",
       "69995  19240       2     168    76.0    120     80            1     1      1   \n",
       "69996  22601       1     158   126.0    140     90            2     2      0   \n",
       "69997  19066       2     183   105.0    180     90            3     1      0   \n",
       "69998  22431       1     163    72.0    135     80            1     2      0   \n",
       "69999  20540       1     170    72.0    120     80            2     1      0   \n",
       "\n",
       "       alco  active  \n",
       "0         0       1  \n",
       "1         0       1  \n",
       "2         0       0  \n",
       "3         0       1  \n",
       "4         0       0  \n",
       "...     ...     ...  \n",
       "69995     0       1  \n",
       "69996     0       1  \n",
       "69997     1       0  \n",
       "69998     0       0  \n",
       "69999     0       1  \n",
       "\n",
       "[70000 rows x 11 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#input\n",
    "x=df2.iloc[:,1:12]\n",
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "3af9fa39-b635-4a0a-9d6e-d7eef10f9d92",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cardio</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69995</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69996</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69997</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69998</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69999</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>70000 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       cardio\n",
       "0           0\n",
       "1           1\n",
       "2           1\n",
       "3           1\n",
       "4           0\n",
       "...       ...\n",
       "69995       0\n",
       "69996       1\n",
       "69997       1\n",
       "69998       1\n",
       "69999       0\n",
       "\n",
       "[70000 rows x 1 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#output\n",
    "\n",
    "y=df2.iloc[:,12:]\n",
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "1e545531-1d48-4cf9-8dd1-2ecea64160c8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1])"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2[\"cardio\"].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "929ae06a-4035-4b5d-9545-3aacb3a9573a",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LogisticRegression\n",
    "logi_model = LogisticRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "d60cc03b-7e79-45a3-9a2b-caeeed7e7c1b",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\anaconda3\\Python\\Lib\\site-packages\\sklearn\\utils\\validation.py:1408: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n",
      "  y = column_or_1d(y, warn=True)\n",
      "C:\\Users\\HP\\anaconda3\\Python\\Lib\\site-packages\\sklearn\\linear_model\\_logistic.py:465: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. OF ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: #000;\n",
       "  --sklearn-color-text-muted: #666;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-1 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-1 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: flex;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "  align-items: start;\n",
       "  justify-content: space-between;\n",
       "  gap: 0.5em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label .caption {\n",
       "  font-size: 0.6rem;\n",
       "  font-weight: lighter;\n",
       "  color: var(--sklearn-color-text-muted);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"▸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"▾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-1 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-1 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 0.5em;\n",
       "  text-align: center;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-1 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>LogisticRegression</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.linear_model.LogisticRegression.html\">?<span>Documentation for LogisticRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>LogisticRegression()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "logi_model.fit(x,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "b1aa7fca-e2be-4930-b152-f4750e1742b7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\anaconda3\\Python\\Lib\\site-packages\\sklearn\\utils\\validation.py:2739: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "print(logi_model.predict([[0,1,2,3,4,5,6,7,8,9,10]]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cb0581de-f8ab-43c1-b477-deed1d802770",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
